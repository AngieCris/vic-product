#!/bin/bash
# Copyright 2016 VMware, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# exit on failure and configure debug, include util functions
set -e -o pipefail && [ -n "$DEBUG" ] && set -x

DOCKER_OPTS=""

OPTS=`getopt -o tls:r: --long tls,local,storage:,insecure-registry: -n 'dinv' -- "$@"`
eval set -- "$OPTS"

while true ; do
    case "$1" in
        -t|--tls) TLS_ENABLED=true ; shift ;;
        -l|--local) LOCAL=true ; shift ;;
        -s|--storage)
          case "$2" in
            "") shift 2 ;;
            *) STORAGE=$2 ; shift 2 ;;
            esac ;;
        -r|--insecure-registry)
          case "$2" in
            "") shift 2 ;;
            *) REGISTRY=$2 ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

term_with_pidfile() {
  [ -e $1 ] && kill $(cat $1)
}

cleanup() {
  echo "sending term signal to dockerd"
  term_with_pidfile "/var/run/docker.pid"
}

trap cleanup EXIT


# Possible that container was previously killed
[ -f /var/run/docker.pid ] && rm /var/run/docker.pid

if [ -z ${TLS_ENABLED+x} ]; then
  PORT=2375
else
  PORT=2376
  [ ! -f /certs/docker.crt ] && [ ! -f /certs/docker.key ] && /certgen
  DOCKER_OPTS+=" --tls --tlscert=/certs/docker.crt --tlskey=/certs/docker.key"
fi
[ -z ${LOCAL+x} ] && DOCKER_OPTS+=" -H tcp://0.0.0.0:${PORT}"
[ -z ${STORAGE+x} ] && STORAGE=overlay2
[ -z ${REGISTRY+x} ] || DOCKER_OPTS+=" --insecure-registry=${REGISTRY}"

/usr/bin/dockerd -s $STORAGE $DOCKER_OPTS
